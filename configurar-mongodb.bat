@echo off
echo ========================================
echo CONFIGURAR MONGODB ATLAS - FAMILIA JAMAR
echo ========================================
echo.
echo üóÑÔ∏è Script para configurar MongoDB Atlas
echo.
echo ========================================
echo PASSO 1: VERIFICAR CONFIGURACAO
echo ========================================
echo.
echo üìã Verificando arquivos do sistema...
echo.

:: Verificar se existe o diret√≥rio database
if exist "database" (
    echo ‚úÖ Diret√≥rio database encontrado
) else (
    echo ‚ùå Diret√≥rio database n√£o encontrado
    echo üìÅ Criando diret√≥rio...
    mkdir database
)

:: Verificar arquivos de backup local
if exist "database\contas.json" (
    echo ‚úÖ Arquivo contas.json encontrado (backup local)
    echo üìä Tamanho: 
    for %%A in ("database\contas.json") do echo    %%~zA bytes
) else (
    echo ‚ùå Arquivo contas.json n√£o encontrado (ser√° criado automaticamente)
)

echo.
echo ========================================
echo PASSO 2: INSTALAR DEPENDENCIAS
echo ========================================
echo.
echo üì¶ Instalando depend√™ncias MongoDB...
npm install mongodb
echo.
echo ‚úÖ Depend√™ncias instaladas!
echo.

echo ========================================
echo PASSO 3: CONFIGURAR MONGODB ATLAS
echo ========================================
echo.
echo üìã Como voc√™ j√° tem conta no MongoDB Atlas:
echo.
echo 1. Acesse: https://cloud.mongodb.com
echo 2. Fa√ßa login na sua conta
echo 3. Crie um novo cluster (se n√£o tiver):
echo    - Clique em "Build a Database"
echo    - Escolha "FREE" (M0)
echo    - Escolha regi√£o (S√£o Paulo)
echo    - Clique em "Create"
echo.
echo 4. Configure Database Access:
echo    - Clique em "Database Access"
echo    - Clique em "Add New Database User"
echo    - Username: familia-jamar
echo    - Password: (crie uma senha forte)
echo    - Role: Read and write to any database
echo    - Clique em "Add User"
echo.
echo 5. Configure Network Access:
echo    - Clique em "Network Access"
echo    - Clique em "Add IP Address"
echo    - Clique em "Allow Access from Anywhere" (0.0.0.0/0)
echo    - Clique em "Confirm"
echo.
echo 6. Obter String de Conex√£o:
echo    - Clique em "Connect"
echo    - Escolha "Connect your application"
echo    - Copie a string de conex√£o
echo    - Substitua ^<password^> pela senha criada
echo    - Substitua ^<dbname^> por familia-jamar
echo.
echo üí° Exemplo de string de conex√£o:
echo mongodb+srv://familia-jamar:sua_senha@cluster0.xxxxx.mongodb.net/familia-jamar
echo.

echo ========================================
echo PASSO 4: CONFIGURAR NO VERCEL
echo ========================================
echo.
echo üîß Para configurar no Vercel:
echo.
echo 1. Acesse seu projeto no Vercel
echo 2. V√° em "Settings" ‚Üí "Environment Variables"
echo 3. Adicione nova vari√°vel:
echo    - Name: MONGODB_URI
echo    - Value: (cole sua string de conex√£o)
echo    - Environment: Production, Preview, Development
echo 4. Clique em "Save"
echo.

echo ========================================
echo PASSO 5: TESTAR CONEXAO
echo ========================================
echo.
echo üß™ Criando script de teste...
echo.

:: Criar script de teste
echo const { MongoClient } = require('mongodb'); > testar-mongodb.js
echo. >> testar-mongodb.js
echo // Configura√ß√£o MongoDB Atlas >> testar-mongodb.js
echo const MONGODB_URI = process.env.MONGODB_URI || 'mongodb://localhost:27017'; >> testar-mongodb.js
echo const DB_NAME = 'familia-jamar'; >> testar-mongodb.js
echo const COLLECTION_NAME = 'contas'; >> testar-mongodb.js
echo. >> testar-mongodb.js
echo async function testarConexaoMongoDB() { >> testar-mongodb.js
echo     let client = null; >> testar-mongodb.js
echo     try { >> testar-mongodb.js
echo         console.log('üîÑ Testando conex√£o com MongoDB Atlas...'); >> testar-mongodb.js
echo         client = new MongoClient(MONGODB_URI, { >> testar-mongodb.js
echo             useNewUrlParser: true, >> testar-mongodb.js
echo             useUnifiedTopology: true, >> testar-mongodb.js
echo         }); >> testar-mongodb.js
echo         await client.connect(); >> testar-mongodb.js
echo         console.log('‚úÖ Conectado ao MongoDB Atlas com sucesso!'); >> testar-mongodb.js
echo         const db = client.db(DB_NAME); >> testar-mongodb.js
echo         const collection = db.collection(COLLECTION_NAME); >> testar-mongodb.js
echo         const totalContas = await collection.countDocuments(); >> testar-mongodb.js
echo         console.log('üìà Total de contas:', totalContas); >> testar-mongodb.js
echo         console.log('üéâ Teste conclu√≠do!'); >> testar-mongodb.js
echo     } catch (error) { >> testar-mongodb.js
echo         console.log('‚ùå Erro:', error.message); >> testar-mongodb.js
echo     } finally { >> testar-mongodb.js
echo         if (client) await client.close(); >> testar-mongodb.js
echo     } >> testar-mongodb.js
echo } >> testar-mongodb.js
echo. >> testar-mongodb.js
echo testarConexaoMongoDB(); >> testar-mongodb.js

echo ‚úÖ Script de teste criado: testar-mongodb.js
echo.

echo ========================================
echo PASSO 6: EXECUTAR TESTES
echo ========================================
echo.
echo üöÄ Para testar a conex√£o:
echo.
echo 1. Configure a vari√°vel MONGODB_URI no Vercel
echo 2. Execute: node testar-mongodb.js
echo 3. Ou execute: npm start (para testar o sistema completo)
echo.

echo ========================================
echo PASSO 7: DEPLOY NO VERCEL
echo ========================================
echo.
echo üì§ Para fazer deploy:
echo.
echo 1. Fa√ßa commit das mudan√ßas:
echo    git add .
echo    git commit -m "MongoDB Atlas configurado"
echo    git push
echo.
echo 2. Vercel far√° deploy autom√°tico
echo 3. Verifique os logs no Vercel Dashboard
echo 4. Teste o sistema online
echo.

echo ========================================
echo LOGS ESPERADOS
echo ========================================
echo.
echo ‚úÖ Logs de sucesso:
echo üîÑ Conectando ao MongoDB Atlas...
echo ‚úÖ Conectado ao MongoDB Atlas com sucesso
echo üìä Banco: familia-jamar
echo üìã Cole√ß√£o: contas
echo ‚úÖ Dados salvos no MongoDB Atlas
echo ‚úÖ Backup salvo no JSON local
echo.
echo ‚ùå Logs de erro:
echo ‚ùå Erro ao conectar ao MongoDB Atlas
echo üí° Usando fallback para JSON local
echo.

echo ========================================
echo SOLUCAO DE PROBLEMAS
echo ========================================
echo.
echo üîß Se tiver problemas:
echo.
echo 1. Verifique a string de conex√£o no Vercel
echo 2. Confirme usu√°rio e senha no MongoDB Atlas
echo 3. Verifique Network Access (0.0.0.0/0)
echo 4. Teste local: node testar-mongodb.js
echo 5. Verifique logs no Vercel Dashboard
echo.

echo ========================================
echo SISTEMA HIBRIDO
echo ========================================
echo.
echo üí° O sistema funciona de forma h√≠brida:
echo.
echo ‚úÖ MongoDB Atlas: Banco principal (nuvem)
echo ‚úÖ JSON Local: Backup autom√°tico
echo ‚úÖ Fallback: Se MongoDB falhar, usa JSON
echo ‚úÖ Sempre funciona: Nunca perde dados
echo.

echo ========================================
echo CONFIGURACAO CONCLUIDA!
echo ========================================
echo.
echo üéâ Agora voc√™ pode:
echo.
echo 1. Configurar MongoDB Atlas seguindo os passos
echo 2. Adicionar MONGODB_URI no Vercel
echo 3. Fazer deploy: git push
echo 4. Testar o sistema online
echo.
echo üìû Se precisar de ajuda, consulte:
echo - CONFIGURAR-MONGODB-ATLAS.md
echo - Logs do Vercel Dashboard
echo - Teste local: node testar-mongodb.js
echo.

pause 